{"ast":null,"code":"var _jsxFileName = \"/Users/michaelvaden/Desktop/Projects/stump/stump/src/components/CodeBlock/CodeBlock.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport styles from './CodeBlock.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst jsParseMap = {\n  'delimeter': {\n    'symbol': [' ', '.'],\n    'color': '#fede5d'\n  },\n  'keyword': {\n    'symbol': ['self'],\n    'color': '#fede5d'\n  },\n  'keywords': ['self']\n};\nconst parseContent = content => {\n  let parsedContent = '';\n\n  // parse through content until a delimeter is reached\n  let delimeterFound = false;\n  let i = 0;\n  while (!delimeterFound) {\n    if (jsParseMap.delimeter.includes(content.substring(i, i + 1))) {\n      parsedContent = content.substring(0, i);\n      delimeterFound = true;\n    } else {\n      i += 1;\n    }\n  }\n  return parsedContent;\n};\nconst defaultProps = {\n  containerClass: '',\n  fileNameClass: '',\n  contentClass: '',\n  fileName: ''\n};\nconst fileName = (fileName, className) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: className,\n    children: fileName\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n};\nconst CodeBlock = props => {\n  _s();\n  const [copyButtonClicked, setCopyButtonClicked] = useState(false);\n  const copyButtonOnClick = () => {\n    navigator.clipboard.writeText(props.content);\n\n    // toggle copy button\n    if (!copyButtonClicked) {\n      setCopyButtonClicked(true);\n      setTimeout(() => {\n        setCopyButtonClicked(false);\n      }, 1500);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `${styles.stumpContainerClass} ${props.containerClass}`,\n    children: [props.fileName ? fileName(props.fileName, `${styles.stumpFileNameClass} ${props.fileNameClass}`) : '', /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.stumpContentWrapperClass,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${styles.stumpContentClass} ${props.contentClass}`,\n        children: parseContent(props.content)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.stumpCopyContainerClass,\n        children: /*#__PURE__*/_jsxDEV(\"svg\", {\n          onClick: copyButtonOnClick,\n          className: `${styles.stumpCopyButton} ${copyButtonClicked ? styles.stumpCopyButtonAnimationSVG : ''}`,\n          xmlns: \"http://www.w3.org/2000/svg\",\n          viewBox: \"0 0 16 16\",\n          children: [/*#__PURE__*/_jsxDEV(\"path\", {\n            className: `${styles.stumpCopyButtonPath1} ${copyButtonClicked ? styles.stumpCopyButtonAnimation1 : ''}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n            className: `${styles.stumpCopyButtonPath2} ${copyButtonClicked ? styles.stumpCopyButtonAnimation2 : ''}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n};\n_s(CodeBlock, \"ESUZmCbIBsSJMri+R05eBc2NQnA=\");\n_c = CodeBlock;\nCodeBlock.defaultProps = defaultProps;\nexport default CodeBlock;\nvar _c;\n$RefreshReg$(_c, \"CodeBlock\");","map":{"version":3,"names":["React","useState","styles","jsParseMap","parseContent","content","parsedContent","delimeterFound","i","delimeter","includes","substring","defaultProps","containerClass","fileNameClass","contentClass","fileName","className","CodeBlock","props","copyButtonClicked","setCopyButtonClicked","copyButtonOnClick","navigator","clipboard","writeText","setTimeout","stumpContainerClass","stumpFileNameClass","stumpContentWrapperClass","stumpContentClass","stumpCopyContainerClass","stumpCopyButton","stumpCopyButtonAnimationSVG","stumpCopyButtonPath1","stumpCopyButtonAnimation1","stumpCopyButtonPath2","stumpCopyButtonAnimation2"],"sources":["/Users/michaelvaden/Desktop/Projects/stump/stump/src/components/CodeBlock/CodeBlock.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport styles from './CodeBlock.module.css';\n\nconst jsParseMap = {\n  'delimeter': {\n    'symbol': [' ', '.'],\n    'color': '#fede5d'\n  },\n  'keyword': {\n    'symbol': ['self'],\n    'color': '#fede5d'\n  },\n  'keywords': ['self']\n}\n\nconst parseContent = (content: string) => {\n  let parsedContent: string = ''\n\n  // parse through content until a delimeter is reached\n  let delimeterFound: boolean = false\n\n  let i: number = 0\n\n  while(!delimeterFound) {\n    if (jsParseMap.delimeter.includes(content.substring(i, i + 1))) {\n      parsedContent = content.substring(0, i)\n      delimeterFound = true\n    } else {\n      i += 1\n    }\n  }\n\n  return parsedContent\n}\n\n\n\n\n\n\n\n\n\n\n\n\ninterface ICodeBlockRequiredProps {\n  content: string;\n}\n\ninterface ICodeBlockOptionalProps {\n  containerClass: string;\n  fileNameClass: string;\n  contentClass: string,\n  fileName: string;\n}\n\ninterface ICodeBlockProps\n  extends ICodeBlockRequiredProps,\n    ICodeBlockOptionalProps {}\n\nconst defaultProps: ICodeBlockOptionalProps = {\n  containerClass: '',\n  fileNameClass: '',\n  contentClass: '',\n  fileName: ''\n}\n\nconst fileName = (fileName: string, className: string) => {\n  return (\n    <div className={className}>\n      {fileName}\n    </div>\n  )\n}\n\nconst CodeBlock = (props: ICodeBlockProps) => {\n  const [copyButtonClicked, setCopyButtonClicked] = useState(false)\n\n  const copyButtonOnClick = () => {\n    navigator.clipboard.writeText(props.content)\n\n    // toggle copy button\n    if (!copyButtonClicked) {\n      setCopyButtonClicked(true)\n      setTimeout(() => {\n        setCopyButtonClicked(false)\n      }, 1500)\n    }\n  }\n\n  return (\n    <div \n      className={`${styles.stumpContainerClass} ${props.containerClass}`}\n    >\n      {props.fileName ? fileName(props.fileName, `${styles.stumpFileNameClass} ${props.fileNameClass}`) : ''}\n      <div className={styles.stumpContentWrapperClass}>\n        <div className={`${styles.stumpContentClass} ${props.contentClass}`}>\n          {parseContent(props.content)}\n        </div>\n        <div className={styles.stumpCopyContainerClass}>\n          <svg \n            onClick={copyButtonOnClick} \n            className={`${styles.stumpCopyButton} ${copyButtonClicked ? styles.stumpCopyButtonAnimationSVG : ''}`} \n            xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 16\"\n          >\n            <path className={`${styles.stumpCopyButtonPath1} ${copyButtonClicked ? styles.stumpCopyButtonAnimation1 : ''}`}/>\n            <path className={`${styles.stumpCopyButtonPath2} ${copyButtonClicked ? styles.stumpCopyButtonAnimation2 : ''}`}/>\n          </svg>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nCodeBlock.defaultProps = defaultProps\nexport default CodeBlock\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,MAAM,MAAM,wBAAwB;AAAC;AAE5C,MAAMC,UAAU,GAAG;EACjB,WAAW,EAAE;IACX,QAAQ,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;IACpB,OAAO,EAAE;EACX,CAAC;EACD,SAAS,EAAE;IACT,QAAQ,EAAE,CAAC,MAAM,CAAC;IAClB,OAAO,EAAE;EACX,CAAC;EACD,UAAU,EAAE,CAAC,MAAM;AACrB,CAAC;AAED,MAAMC,YAAY,GAAIC,OAAe,IAAK;EACxC,IAAIC,aAAqB,GAAG,EAAE;;EAE9B;EACA,IAAIC,cAAuB,GAAG,KAAK;EAEnC,IAAIC,CAAS,GAAG,CAAC;EAEjB,OAAM,CAACD,cAAc,EAAE;IACrB,IAAIJ,UAAU,CAACM,SAAS,CAACC,QAAQ,CAACL,OAAO,CAACM,SAAS,CAACH,CAAC,EAAEA,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE;MAC9DF,aAAa,GAAGD,OAAO,CAACM,SAAS,CAAC,CAAC,EAAEH,CAAC,CAAC;MACvCD,cAAc,GAAG,IAAI;IACvB,CAAC,MAAM;MACLC,CAAC,IAAI,CAAC;IACR;EACF;EAEA,OAAOF,aAAa;AACtB,CAAC;AA4BD,MAAMM,YAAqC,GAAG;EAC5CC,cAAc,EAAE,EAAE;EAClBC,aAAa,EAAE,EAAE;EACjBC,YAAY,EAAE,EAAE;EAChBC,QAAQ,EAAE;AACZ,CAAC;AAED,MAAMA,QAAQ,GAAG,CAACA,QAAgB,EAAEC,SAAiB,KAAK;EACxD,oBACE;IAAK,SAAS,EAAEA,SAAU;IAAA,UACvBD;EAAQ;IAAA;IAAA;IAAA;EAAA,QACL;AAEV,CAAC;AAED,MAAME,SAAS,GAAIC,KAAsB,IAAK;EAAA;EAC5C,MAAM,CAACC,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGpB,QAAQ,CAAC,KAAK,CAAC;EAEjE,MAAMqB,iBAAiB,GAAG,MAAM;IAC9BC,SAAS,CAACC,SAAS,CAACC,SAAS,CAACN,KAAK,CAACd,OAAO,CAAC;;IAE5C;IACA,IAAI,CAACe,iBAAiB,EAAE;MACtBC,oBAAoB,CAAC,IAAI,CAAC;MAC1BK,UAAU,CAAC,MAAM;QACfL,oBAAoB,CAAC,KAAK,CAAC;MAC7B,CAAC,EAAE,IAAI,CAAC;IACV;EACF,CAAC;EAED,oBACE;IACE,SAAS,EAAG,GAAEnB,MAAM,CAACyB,mBAAoB,IAAGR,KAAK,CAACN,cAAe,EAAE;IAAA,WAElEM,KAAK,CAACH,QAAQ,GAAGA,QAAQ,CAACG,KAAK,CAACH,QAAQ,EAAG,GAAEd,MAAM,CAAC0B,kBAAmB,IAAGT,KAAK,CAACL,aAAc,EAAC,CAAC,GAAG,EAAE,eACtG;MAAK,SAAS,EAAEZ,MAAM,CAAC2B,wBAAyB;MAAA,wBAC9C;QAAK,SAAS,EAAG,GAAE3B,MAAM,CAAC4B,iBAAkB,IAAGX,KAAK,CAACJ,YAAa,EAAE;QAAA,UACjEX,YAAY,CAACe,KAAK,CAACd,OAAO;MAAC;QAAA;QAAA;QAAA;MAAA,QACxB,eACN;QAAK,SAAS,EAAEH,MAAM,CAAC6B,uBAAwB;QAAA,uBAC7C;UACE,OAAO,EAAET,iBAAkB;UAC3B,SAAS,EAAG,GAAEpB,MAAM,CAAC8B,eAAgB,IAAGZ,iBAAiB,GAAGlB,MAAM,CAAC+B,2BAA2B,GAAG,EAAG,EAAE;UACtG,KAAK,EAAC,4BAA4B;UAAC,OAAO,EAAC,WAAW;UAAA,wBAEtD;YAAM,SAAS,EAAG,GAAE/B,MAAM,CAACgC,oBAAqB,IAAGd,iBAAiB,GAAGlB,MAAM,CAACiC,yBAAyB,GAAG,EAAG;UAAE;YAAA;YAAA;YAAA;UAAA,QAAE,eACjH;YAAM,SAAS,EAAG,GAAEjC,MAAM,CAACkC,oBAAqB,IAAGhB,iBAAiB,GAAGlB,MAAM,CAACmC,yBAAyB,GAAG,EAAG;UAAE;YAAA;YAAA;YAAA;UAAA,QAAE;QAAA;UAAA;UAAA;UAAA;QAAA;MAC7G;QAAA;QAAA;QAAA;MAAA,QACF;IAAA;MAAA;MAAA;MAAA;IAAA,QACF;EAAA;IAAA;IAAA;IAAA;EAAA,QACF;AAEV,CAAC;AAAA,GArCKnB,SAAS;AAAA,KAATA,SAAS;AAuCfA,SAAS,CAACN,YAAY,GAAGA,YAAY;AACrC,eAAeM,SAAS;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}